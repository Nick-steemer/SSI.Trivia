// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SSI.Trivia.Shared.DbContexts;

#nullable disable

namespace SSI.Trivia.Shared.Migrations
{
    [DbContext(typeof(TriviaDbContext))]
    [Migration("20250409143331_answeridtoguidandcorrectansweridonquestion")]
    partial class answeridtoguidandcorrectansweridonquestion
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.4");

            modelBuilder.Entity("SSI.Trivia.Shared.Models.Answer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsCorrect")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("QuestionId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId");

                    b.ToTable("Answers");
                });

            modelBuilder.Entity("SSI.Trivia.Shared.Models.Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AfterMediaUrl")
                        .HasMaxLength(5000)
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("CorrectAnswerId")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsTieBreaker")
                        .HasColumnType("INTEGER");

                    b.Property<string>("MediaUrl")
                        .HasMaxLength(5000)
                        .HasColumnType("TEXT");

                    b.Property<string>("QuestionText")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<int?>("SprintId")
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("TieBreakerAnswerId")
                        .HasColumnType("TEXT");

                    b.Property<string>("UploadedAfterMediaBase64")
                        .HasMaxLength(5000)
                        .HasColumnType("TEXT");

                    b.Property<string>("UploadedAfterMediaName")
                        .HasMaxLength(5000)
                        .HasColumnType("TEXT");

                    b.Property<string>("UploadedMediaBase64")
                        .HasMaxLength(5000)
                        .HasColumnType("TEXT");

                    b.Property<string>("UploadedMediaName")
                        .HasMaxLength(5000)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("SprintId");

                    b.HasIndex("TieBreakerAnswerId");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("SSI.Trivia.Shared.Models.Sprint", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("SSI.Trivia.Shared.Models.Answer", b =>
                {
                    b.HasOne("SSI.Trivia.Shared.Models.Question", null)
                        .WithMany("Answers")
                        .HasForeignKey("QuestionId");
                });

            modelBuilder.Entity("SSI.Trivia.Shared.Models.Question", b =>
                {
                    b.HasOne("SSI.Trivia.Shared.Models.Sprint", null)
                        .WithMany("Questions")
                        .HasForeignKey("SprintId");

                    b.HasOne("SSI.Trivia.Shared.Models.Answer", "TieBreakerAnswer")
                        .WithMany()
                        .HasForeignKey("TieBreakerAnswerId");

                    b.Navigation("TieBreakerAnswer");
                });

            modelBuilder.Entity("SSI.Trivia.Shared.Models.Question", b =>
                {
                    b.Navigation("Answers");
                });

            modelBuilder.Entity("SSI.Trivia.Shared.Models.Sprint", b =>
                {
                    b.Navigation("Questions");
                });
#pragma warning restore 612, 618
        }
    }
}
